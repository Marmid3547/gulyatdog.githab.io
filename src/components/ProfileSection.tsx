
import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';

const ProfileSection = () => {
  const [userProfile, setUserProfile] = useState({
    name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
    location: '–ú–æ—Å–∫–≤–∞, –†–æ—Å—Å–∏—è',
    dogName: '–ë–æ–±–∏–∫',
    dogBreed: '–õ–∞–±—Ä–∞–¥–æ—Ä',
    dogAge: '3 –≥–æ–¥–∞'
  });

  const [isEditing, setIsEditing] = useState(false);

  return (
    <div className="max-w-4xl mx-auto p-6">
      <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-lg">
        <CardHeader className="text-center">
          <CardTitle className="text-3xl bg-gradient-to-r from-orange-500 to-blue-500 bg-clip-text text-transparent">
            –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="flex flex-col md:flex-row items-center gap-6">
            <Avatar className="w-32 h-32">
              <AvatarImage src="/placeholder.svg" alt="–ü—Ä–æ—Ñ–∏–ª—å" />
              <AvatarFallback className="text-2xl bg-gradient-to-r from-orange-400 to-blue-400 text-white">
                {userProfile.name.split(' ').map(n => n[0]).join('')}
              </AvatarFallback>
            </Avatar>
            
            <div className="flex-1 space-y-4">
              {isEditing ? (
                <div className="space-y-4">
                  <div>
                    <Label htmlFor="name">–ò–º—è –≤–ª–∞–¥–µ–ª—å—Ü–∞</Label>
                    <Input
                      id="name"
                      value={userProfile.name}
                      onChange={(e) => setUserProfile({...userProfile, name: e.target.value})}
                      className="rounded-full"
                    />
                  </div>
                  <div>
                    <Label htmlFor="location">–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ</Label>
                    <Input
                      id="location"
                      value={userProfile.location}
                      onChange={(e) => setUserProfile({...userProfile, location: e.target.value})}
                      className="rounded-full"
                    />
                  </div>
                </div>
              ) : (
                <div>
                  <h2 className="text-2xl font-bold text-gray-800">{userProfile.name}</h2>
                  <p className="text-gray-600">{userProfile.location}</p>
                </div>
              )}
            </div>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            <Card className="border border-orange-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-orange-600">
                  üêï –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∏—Ç–æ–º—Ü–µ
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                {isEditing ? (
                  <>
                    <div>
                      <Label htmlFor="dogName">–ö–ª–∏—á–∫–∞</Label>
                      <Input
                        id="dogName"
                        value={userProfile.dogName}
                        onChange={(e) => setUserProfile({...userProfile, dogName: e.target.value})}
                        className="rounded-full"
                      />
                    </div>
                    <div>
                      <Label htmlFor="dogBreed">–ü–æ—Ä–æ–¥–∞</Label>
                      <Input
                        id="dogBreed"
                        value={userProfile.dogBreed}
                        onChange={(e) => setUserProfile({...userProfile, dogBreed: e.target.value})}
                        className="rounded-full"
                      />
                    </div>
                    <div>
                      <Label htmlFor="dogAge">–í–æ–∑—Ä–∞—Å—Ç</Label>
                      <Input
                        id="dogAge"
                        value={userProfile.dogAge}
                        onChange={(e) => setUserProfile({...userProfile, dogAge: e.target.value})}
                        className="rounded-full"
                      />
                    </div>
                  </>
                ) : (
                  <>
                    <p><strong>–ö–ª–∏—á–∫–∞:</strong> {userProfile.dogName}</p>
                    <p><strong>–ü–æ—Ä–æ–¥–∞:</strong> {userProfile.dogBreed}</p>
                    <p><strong>–í–æ–∑—Ä–∞—Å—Ç:</strong> {userProfile.dogAge}</p>
                  </>
                )}
              </CardContent>
            </Card>

            <Card className="border border-blue-200">
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-blue-600">
                  üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—É–ª–æ–∫
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <p><strong>–ü—Ä–æ–≥—É–ª–æ–∫ –≤ —ç—Ç–æ–º –º–µ—Å—è—Ü–µ:</strong> 15</p>
                <p><strong>–ù–æ–≤—ã—Ö –¥—Ä—É–∑–µ–π:</strong> 3</p>
                <p><strong>–õ—é–±–∏–º—ã–π –º–∞—Ä—à—Ä—É—Ç:</strong> –ü–∞—Ä–∫ –°–æ–∫–æ–ª—å–Ω–∏–∫–∏</p>
              </CardContent>
            </Card>
          </div>

          <div className="flex justify-center gap-4">
            {isEditing ? (
              <>
                <Button 
                  onClick={() => setIsEditing(false)}
                  className="bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white rounded-full px-6"
                >
                  –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
                </Button>
                <Button 
                  variant="outline"
                  onClick={() => setIsEditing(false)}
                  className="rounded-full px-6"
                >
                  –û—Ç–º–µ–Ω–∞
                </Button>
              </>
            ) : (
              <Button 
                onClick={() => setIsEditing(true)}
                className="bg-gradient-to-r from-orange-500 to-blue-500 hover:from-orange-600 hover:to-blue-600 text-white rounded-full px-6"
              >
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
              </Button>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default ProfileSection;
